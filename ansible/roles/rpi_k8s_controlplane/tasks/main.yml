---

- name: Is bootstrapper
  set_fact:
    is_bootstrapper: "{{ groups['master'].index(inventory_hostname) == 0 }}"

- name: init controlplane on first master
  block:

  - name: check if server is running / controlplane has been initialized
    shell: "kubectl version --short 2>&1 | grep Server"
    failed_when: false
    changed_when: false
    register: kubectl_server

  - name: include bootstrapper tasks if kubectl_server return does not equal 0 (is error)
    include: bootstrapper.yml
    when: kubectl_server.rc != 0

  - name: sync TOKEN file locally
    fetch:
      src: /opt/kube/secrets/TOKEN
      dest: out/TOKEN
      flat: yes

  - name: sync CERTIFICATE_KEY file locally
    fetch:
      src: /opt/kube/secrets/CERTIFICATE_KEY
      dest: out/CERTIFICATE_KEY
      flat: yes

  - name: sync CA_KEY_HASH file locally
    fetch:
      src: /opt/kube/secrets/CA_KEY_HASH
      dest: out/CA_KEY_HASH
      flat: yes

  - name: sync kube config locally
    fetch:
      src: /etc/kubernetes/admin.conf
      dest: out/config
      flat: yes

  - name: copy config
    local_action:
      module: copy
      src: out/config
      dest: /home/vagrant/.kube/config
      owner: vagrant
      group: vagrant
      mode: 0644

  when: is_bootstrapper

- name: join seconbd and third master to controlplane
  block:

  - name: Create /opt/kube
    file:
      state: directory
      path: /opt/kube
      owner: root
      group: root
      mode: 0755

  - name: Create /opt/kube/secrets
    file:
      state: directory
      path: /opt/kube/secrets
      owner: root
      group: root
      mode: 0755

  - name: Create /opt/kube/configs
    file:
      state: directory
      path: /opt/kube/configs
      owner: root
      group: root
      mode: 0755

  - name: Copy TOKEN to /opt/kube/secrets/TOKEN
    copy:
      src: out/TOKEN
      dest: /opt/kube/secrets/TOKEN

  - name: Copy CERTIFICATE_KEY to /opt/kube/secrets/CERTIFICATE_KEY
    copy:
      src: out/CERTIFICATE_KEY
      dest: /opt/kube/secrets/CERTIFICATE_KEY

  - name: Copy CA_KEY_HASH to /opt/kube/secrets/CA_KEY_HASH
    copy:
      src: out/CA_KEY_HASH
      dest: /opt/kube/secrets/CA_KEY_HASH

  - name: check if server is running / controlplane has been initialized
    shell: "kubectl version --short 2>&1 | grep Server"
    failed_when: false
    changed_when: false
    register: kubectl_server

  - name: include controlplane tasks if kubectl_server return does not equal 0 (is error)
    include: controlplane.yml
    when: kubectl_server.rc != 0

  when: not is_bootstrapper
...
